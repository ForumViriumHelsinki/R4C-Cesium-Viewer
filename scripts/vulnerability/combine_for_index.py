import json

def load_geojson(file_path):
    with open(file_path, 'r') as f:
        return json.load(f)

def save_geojson(data, file_path):
    with open(file_path, 'w') as f:
        json.dump(data, f, indent=4)

def add_missing_values_property(geojson, missing_value_flag):
    for feature in geojson['features']:
        feature['properties']['missing_values'] = missing_value_flag

def combine_geojsons(main_geojson, na_geojson):
    # Add missing_values property to the features
    add_missing_values_property(main_geojson, False)  # False for main data
    add_missing_values_property(na_geojson, True)     # True for null data

    # Print the lengths of the GeoJSON features before combining
    print(f"Length of main_geojson features: {len(main_geojson['features'])}")
    print(f"Length of na_geojson features: {len(na_geojson['features'])}")

    # Combine features from both GeoJSON files
    main_geojson['features'].extend(na_geojson['features'])

    # Print the length of the combined GeoJSON features
    print(f"Length of combined_geojson features: {len(main_geojson['features'])}")

    return main_geojson

def main():
    # File paths
    null_geojson_path = 'h2906_wgs84_missing_with_lc.geojson'
    main_geojson_path = 'h2906_wgs84_with_lc.geojson'
    save_to_path = 'r4c_stats_grid.json'

    # Load the GeoJSON files
    null_geojson = load_geojson(null_geojson_path)
    main_geojson = load_geojson(main_geojson_path)

    # Combine the features
    combined_geojson = combine_geojsons(main_geojson, null_geojson)

    # Save the combined GeoJSON back to the output file
    save_geojson(combined_geojson, save_to_path)
    print(f"Combined GeoJSON saved to {save_to_path}")

if __name__ == "__main__":
    main()
