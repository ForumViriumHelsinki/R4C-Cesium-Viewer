apiVersion: apps/v1
kind: Deployment
metadata:
  name: pygeoapi
  namespace: default
  labels:
    app: pygeoapi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pygeoapi
  template:
    metadata:
      labels:
        app: pygeoapi
    spec:
      initContainers:
      - name: wait-for-db-init
        image: postgres:15-alpine
        env:
        - name: DATABASE_URL
          value: "postgres://regions4climate_user:regions4climate_pass@postgresql:5432/regions4climate?sslmode=disable"
        command:
        - sh
        - -c
        - |
          set -e
          echo "üîç Waiting for database to be fully initialized and migrated..."

          # Wait for PostgreSQL to be ready
          echo "   Checking PostgreSQL availability..."
          until pg_isready -h postgresql -p 5432 -U regions4climate_user; do
            echo "   PostgreSQL is not ready yet. Waiting..."
            sleep 2
          done
          echo "‚úÖ PostgreSQL is ready"

          # Wait for migrations to complete by checking schema_migrations table
          echo "   Checking for completed migrations..."
          MAX_ATTEMPTS=60  # 5 minutes max wait
          ATTEMPT=1

          until [ $ATTEMPT -gt $MAX_ATTEMPTS ]; do
            # Check if schema_migrations table exists and has entries
            MIGRATION_COUNT=$(psql "$DATABASE_URL" -t -c "SELECT COUNT(*) FROM schema_migrations;" 2>/dev/null | tr -d ' ' || echo "0")

            if [ "$MIGRATION_COUNT" -gt "0" ]; then
              echo "‚úÖ Found $MIGRATION_COUNT applied migrations"

              # Verify critical table exists
              if psql "$DATABASE_URL" -c "SELECT 1 FROM r4c_hsy_building_current LIMIT 1;" > /dev/null 2>&1; then
                echo "‚úÖ r4c_hsy_building_current table exists and is accessible"
                echo "üéâ Database is fully ready for pygeoapi!"
                exit 0
              else
                echo "‚ùå r4c_hsy_building_current table missing after migrations"
                exit 1
              fi
            fi

            echo "   Migrations not yet complete (attempt $ATTEMPT/$MAX_ATTEMPTS). Waiting..."
            sleep 5
            ATTEMPT=$((ATTEMPT + 1))
          done

          echo "‚ùå Timeout waiting for database migrations to complete"
          echo "‚ÑπÔ∏è  Check migration job logs for details"
          exit 1
      containers:
      - name: pygeoapi
        image: geopython/pygeoapi:latest
        ports:
        - containerPort: 80
        env:
        - name: PYGEOAPI_CONFIG
          value: /pygeoapi/local.config.yml
        - name: DB_HOST
          value: postgresql
        - name: DB_NAME_R4C
          value: regions4climate
        - name: DB_NAME_MED_IREN
          value: med_iren
        - name: DB_USER
          value: regions4climate_user
        - name: DB_PASSWORD
          value: regions4climate_pass
        volumeMounts:
        - name: config
          mountPath: /pygeoapi/local.config.yml
          subPath: local.config.yml
        - name: data
          mountPath: /pygeoapi/tests/data
        resources:
          limits:
            cpu: 250m
            memory: 512Mi
          requests:
            cpu: 250m
            memory: 256Mi
      volumes:
      - name: config
        configMap:
          name: pygeoapi-config
      - name: data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: pygeoapi
  namespace: default
  labels:
    app: pygeoapi
spec:
  selector:
    app: pygeoapi
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pygeoapi-config
  namespace: default
data:
  local.config.yml: |
    server:
        bind:
            host: 0.0.0.0
            port: 80
        url: /
        mimetype: application/json; charset=UTF-8
        encoding: utf-8
        gzip: false
        languages:
            - en-US
            - fr-CA
        pretty_print: true
        limits:
          default_items: 100
          max_items: 100000
          max_distance_x: 2500
          max_distance_y: 2500
          max_distance_units: m
        map:
            url: https://tile.openstreetmap.org/{z}/{x}/{y}.png
            attribution: '&copy; <a href="https://openstreetmap.org/copyright">OpenStreetMap contributors</a>'

    logging:
        level: ERROR

    metadata:
        identification:
            title:
                en: pygeoapi local development instance
            description:
                en: pygeoapi provides an API to geospatial data
            keywords:
                en:
                    - geospatial
                    - data
                    - api
            keywords_type: theme
            terms_of_service: https://creativecommons.org/licenses/by/4.0/
            url: https://example.org
        license:
            name: CC-BY 4.0 license
            url: https://creativecommons.org/licenses/by/4.0/
        provider:
            name: Organization Name
            url: https://pygeoapi.io
        contact:
            name: Developer
            email: dev@example.org

    resources:
        adaptation_landcover:
            type: collection
            title: HSY landcover areas used for climate adaptation
            description: This collection contains HSY landcover areas used for climate adaptation in R4C demo.
            keywords:
                - Climate Adaptation
                - Uusimaa
                - Urban Heat
                - HSY
            extents:
                spatial:
                    bbox: [22.7497,59.689,26.65,60.84]
                    crs: http://www.opengis.net/def/crs/OGC/1.3/CRS84
                temporal:
                    begin: 2000-10-30T18:24:39Z
                    end: 2028-10-30T08:57:29Z
            providers:
                - type: feature
                  name: PostgreSQL
                  data:
                    host: postgresql
                    dbname: regions4climate
                    user: regions4climate_user
                    password: regions4climate_pass
                  id_field: id
                  table: adaptation_landcover
                  geom_field: geom

        r4c_coldspot:
            type: collection
            title: Cold areas
            description: This collection contains Capital Region areas that have heatexposure index 0.4 or less
            keywords:
                - Heat Exposure
                - Uusimaa
                - Urban Heat
                - Capital Region
            extents:
                spatial:
                    bbox: [22.7497,59.689,26.65,60.84]
                    crs: http://www.opengis.net/def/crs/OGC/1.3/CRS84
                temporal:
                    begin: 2000-10-30T18:24:39Z
                    end: 2023-10-30T08:57:29Z
            providers:
                - type: feature
                  name: PostgreSQL
                  data:
                    host: postgresql
                    dbname: regions4climate
                    user: regions4climate_user
                    password: regions4climate_pass
                  id_field: id
                  table: r4c_coldspot
                  geom_field: geom
